export async function generarTS(columnas: number, nombre: string): Promise<any> {
    let nuevoNombreComponente = nombre.charAt(0).toUpperCase() + quitarGuion(nombre.slice(1));
    let textoTs = ""
        + "import { Component, OnInit } from '@angular/core';\n"
        + "\n"
        + "interface tipoSeries {\n"
        + "  value: string,\n"
        + "  viewValue: string\n"
        + "}\n"
        + "\n"
        + "@Component({\n"
        + "selector: 'app-" + nombre + "',\n"
        + "templateUrl: './" + nombre + ".component.html',\n"
        + "})\n"
        + "export class " + nuevoNombreComponente + "Component implements OnInit {\n"

        + "\n"
        + "  title = \"Administración de Programas\";\n"
        + "  subtitle = \"Series\";\n"
        + "  textButton = \"Nueva Serie\";\n"
        + "  titleCard = \"Buscar Producción\";\n"
        + "  showCloseButton = false;\n"
        + "  routeInfo = [];\n"
        + "\n"
        + "  // Select\n"
        + "\n"
        + "  selectedValue = \"\";\n"
        + "  tipoS: tipoSeries[] = [\n"
        + "    {value: '', viewValue: 'Selecciona una opción'},\n"
        + "    {value: 'Adquisición', viewValue: 'Adquisición'},\n"
        + "    {value: 'Producción', viewValue: 'Producción'},\n"
        + "    {value: 'Producción Digital', viewValue: 'Producción Digital'},\n"
        + "    {value: 'Donación', viewValue: 'Donación'},\n"
        + "    {value: 'Coproducción', viewValue: 'Coproducción'},\n"
        + "    {value: 'Podcast', viewValue: 'Podcast'},\n"
        + "    {value: 'Cine', viewValue: 'Cine'},\n"
        + "  ];\n"
        + "\n"
        + "  // Seccion 2\n"
        + "\n"
        + "  titleCard2 = \"\";\n"
        + "  routeInfo2 = [\"Registros modificados\", \"Ingresados recientemente\"];\n"
        + "\n"
        + "  // Table\n"
        + "  headerName = \"Buscar\";\n"
        + "  headers = [\n";
    for (let contador = 0; contador < columnas; contador++) {
        textoTs = textoTs + "    {\n"
            + "      id:" + (contador + 1) + ",\n"
            + "      name: \"Nombre " + (contador + 1) + "\",\n"
            + "      checked: true,\n"
            + "    }, \n"
    }
    textoTs = textoTs + "  ];\n"
        + "\n"
        + "  content = [\n"
        + "    {\n"
        + "      header1: \"\",\n"
        + "      header2: \"\",\n"
        + "      header3: \"\",\n"
        + "      header4: \"\",\n"
        + "      editing: false,\n"
        + "      edit: true,\n"
        + "      read: true,\n"
        + "      delete: true,\n"
        + "      canDelete: true\n"
        + "    },\n"
        + "    {\n"
        + "      header1: \"\",\n"
        + "      header2: \"\",\n"
        + "      header3: \"\",\n"
        + "      header4: \"\",\n"
        + "      editing: false,\n"
        + "      edit: true,\n"
        + "      read: true,\n"
        + "      delete: true,\n"
        + "      canDelete: true\n"
        + "\n"
        + "    },\n"
        + "    {\n"
        + "      header1: \"\",\n"
        + "      header2: \"\",\n"
        + "      header3: \"\",\n"
        + "      header4: \"\",\n"
        + "      editing: false,\n"
        + "      edit: true,\n"
        + "      read: true,\n"
        + "      delete: true,\n"
        + "      canDelete: true\n"
        + "    }\n"
        + "   \n"
        + "  ];\n"
        + "\n"
        + "  canEdit: boolean = true;\n"
        + "\n"
        + "  constructor() { }\n"
        + "\n"
        + "  ngOnInit(): void {\n"
        + "  }\n"
        + "\n"
        + "\n"
        + "}\n"
    return textoTs;
}

function quitarGuion(nombre: string): string {
    let txt = "";
    let posicionInicio = 0;
    let posicionGuion = nombre.indexOf("-");
    while (posicionGuion != -1) {
        //Lógica si encuentra un "-"
        txt = txt + nombre.slice(posicionInicio, posicionGuion);
        txt = txt + nombre.charAt(posicionGuion + 1).toUpperCase();
        posicionInicio = posicionGuion + 2;
        posicionGuion = nombre.indexOf("-", posicionInicio);
    }
    txt = txt + nombre.slice(posicionInicio, nombre.length);
    return txt;
}